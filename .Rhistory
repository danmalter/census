library(censusR)
devtools::install_github("hadley/pkgdown")
library(pkgdown)
pkgdown::build_site()
pkgdown::build_site()
devtools::use_travis()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r
language: r
cache: packages
sudo: false
warnings_are_errors: false
latex: false
r:
- oldrel
- release
- devel
R.Version
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
remove.packages("censusR")
library(censusR)
library(census)
pkgdown::build_site()
pkgdown::build_site()
setwd("~/Desktop/census")
devtools::submit_cran()
library(devtools)
devtools::submit_cran()
devtools::submit_cran('census')
devtools::submit_cran(census)
devtools::submit_cran(~/GitHub/census)
devtools::submit_cran("~/GitHub/census")
devtools::build_vignettes()
devtools::build_vignettes("~/GitHub/census")
devtools::build_vignettes("~/GitHub/census")
devtools::build_vignettes("census")
devtools::build_vignettes(census)
install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
vignette('introduction', package = 'census')
devtools::use_vignette('introduction')
devtools::install_github("~/GitHub/census", build_vignettes = TRUE)
devtools::install_github("danmalter/census", build_vignettes = TRUE)
remove.packages("censusR")
devtools::build_vignettes("danmalter/census")
devtools::build_vignettes("~/GitHub/census")
tools::buildVignettes(dir = '~/GitHub/census', tangle=TRUE)
devtools::build_vignettes()
devtools::use_vignette("~/GitHub/census/vignettes")
getLatLon <- function(cities) {
geo <- ggmap::geocode(cities)
lat_lon <- data.frame(cbind(cities, geo$lon, geo$lat))
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
return(lat_lon)
}
cities <- c("Chicago", "New York")
getLatLon(cities)
ggmap(cities)
ggmap("Chicago")
library(ggmap)
ggmap(cities)
ggmap("Chicago")
ggmap(chicago)
geocode(cities)
geocode(cities, output='all')
geocode(cities, output='more')
getCensus <- function(cities, radius) {
geo <- ggmap::geocode(cities)
lat_lon <- data.frame(cbind(geo$locality, geo$lon, geo$lat))
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
getCensus(cities)
getCensus(cities)
radius <- 2
getCensus <- function(cities, radius) {
geo <- ggmap::geocode(cities)
lat_lon <- data.frame(cbind(geo$locality, geo$lon, geo$lat))
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
# Remove spaces between city names.  Example "New York" to "NewYork".
cities.lst <- list(lat_lon$cities)
for (i in 1:length(cities.lst)){
cities.lst <- gsub("[[:space:]]", "", cities.lst[[i]])
}
lon.lst <- unlist(as.character(lat_lon$lon))
lat.lst <- unlist(as.character(lat_lon$lat))
#radius <- 2
url=as.list(paste("http://mcdc.missouri.edu/cgi-bin/broker",
"?_PROGRAM=websas.caps10acsb.sas&SERVICE=appdev",
"&sitename=", cities.lst,
"&longitude=", lon.lst,
"&latitude=", lat.lst,
"&radii=", radius,
"&dprofile=on&eprofile=on&sprofile=on&hprofile=on",
"&cntypops=on&printdetail=on&_debug=",
sep=""))
print(url)
result = list()
for (i in 1:length(url)){
html <- RCurl::getURL(url[[i]])
pattern <- "href=\"/tmpscratch/caps10acs(.*?).csv\""
match.info <- regexec(pattern=pattern, text=html)
num.start <- match.info[[1]][2]
num.length <- attr(match.info[[1]], "match.length")[2]
num <- substr(html, num.start, num.start + num.length - 1)
file.location <- paste("http://mcdc.missouri.edu/tmpscratch/",
"caps10acs", num, ".csv",
sep="")
file.location
data.tmp <- data.frame(read.csv(file=file.location, colClasses = "character"))
result[[i]] <- data.tmp
}
final.result <- do.call(rbind, result)
return(final.result)
}
getCensus(cities)
getCensus <- function(cities, radius) {
geo <- ggmap::geocode(cities)
lat_lon <- data.frame(geo$locality, geo$lon, geo$lat)
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
# Remove spaces between city names.  Example "New York" to "NewYork".
cities.lst <- list(lat_lon$cities)
for (i in 1:length(cities.lst)){
cities.lst <- gsub("[[:space:]]", "", cities.lst[[i]])
}
lon.lst <- unlist(as.character(lat_lon$lon))
lat.lst <- unlist(as.character(lat_lon$lat))
#radius <- 2
url=as.list(paste("http://mcdc.missouri.edu/cgi-bin/broker",
"?_PROGRAM=websas.caps10acsb.sas&SERVICE=appdev",
"&sitename=", cities.lst,
"&longitude=", lon.lst,
"&latitude=", lat.lst,
"&radii=", radius,
"&dprofile=on&eprofile=on&sprofile=on&hprofile=on",
"&cntypops=on&printdetail=on&_debug=",
sep=""))
print(url)
result = list()
for (i in 1:length(url)){
html <- RCurl::getURL(url[[i]])
pattern <- "href=\"/tmpscratch/caps10acs(.*?).csv\""
match.info <- regexec(pattern=pattern, text=html)
num.start <- match.info[[1]][2]
num.length <- attr(match.info[[1]], "match.length")[2]
num <- substr(html, num.start, num.start + num.length - 1)
file.location <- paste("http://mcdc.missouri.edu/tmpscratch/",
"caps10acs", num, ".csv",
sep="")
file.location
data.tmp <- data.frame(read.csv(file=file.location, colClasses = "character"))
result[[i]] <- data.tmp
}
final.result <- do.call(rbind, result)
return(final.result)
}
getCensus(cities)
geo <- ggmap::geocode(cities)
head(geo)
geo <- ggmap::geocode(cities, output='more')
head(geo)
lat_lon <- data.frame(geo$locality, geo$lon, geo$lat)
head(lat_lon)
getCensus <- function(cities, radius) {
geo <- ggmap::geocode(cities, output='more')
lat_lon <- data.frame(geo$locality, geo$lon, geo$lat)
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
# Remove spaces between city names.  Example "New York" to "NewYork".
cities.lst <- list(lat_lon$locality)
for (i in 1:length(cities.lst)){
cities.lst <- gsub("[[:space:]]", "", cities.lst[[i]])
}
lon.lst <- unlist(as.character(lat_lon$lon))
lat.lst <- unlist(as.character(lat_lon$lat))
#radius <- 2
url=as.list(paste("http://mcdc.missouri.edu/cgi-bin/broker",
"?_PROGRAM=websas.caps10acsb.sas&SERVICE=appdev",
"&sitename=", cities.lst,
"&longitude=", lon.lst,
"&latitude=", lat.lst,
"&radii=", radius,
"&dprofile=on&eprofile=on&sprofile=on&hprofile=on",
"&cntypops=on&printdetail=on&_debug=",
sep=""))
print(url)
result = list()
for (i in 1:length(url)){
html <- RCurl::getURL(url[[i]])
pattern <- "href=\"/tmpscratch/caps10acs(.*?).csv\""
match.info <- regexec(pattern=pattern, text=html)
num.start <- match.info[[1]][2]
num.length <- attr(match.info[[1]], "match.length")[2]
num <- substr(html, num.start, num.start + num.length - 1)
file.location <- paste("http://mcdc.missouri.edu/tmpscratch/",
"caps10acs", num, ".csv",
sep="")
file.location
data.tmp <- data.frame(read.csv(file=file.location, colClasses = "character"))
result[[i]] <- data.tmp
}
final.result <- do.call(rbind, result)
return(final.result)
}
getCensus(cities)
geo <- ggmap::geocode(cities, output='more')
lat_lon <- data.frame(geo$locality, geo$lon, geo$lat)
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
lat_lon
cities.lst <- list(lat_lon$locality)
for (i in 1:length(cities.lst)){
cities.lst <- gsub("[[:space:]]", "", cities.lst[[i]])
}
cities.lst
cities.lst <- list(lat_lon$locality)
lat_lon
lat_lon <- data.frame(geo$locality, geo$lon, geo$lat)
head(lat_lon)
head(geo)
lat_lon <- geo[,c("locality", "lon", "lat")]
getCensus <- function(cities, radius) {
geo <- ggmap::geocode(cities, output='more')
lat_lon <- geo[,c("locality", "lon", "lat")]
names(lat_lon)[2] <- "lon"
names(lat_lon)[3] <- "lat"
# Remove spaces between city names.  Example "New York" to "NewYork".
cities.lst <- list(lat_lon$locality)
for (i in 1:length(cities.lst)){
cities.lst <- gsub("[[:space:]]", "", cities.lst[[i]])
}
lon.lst <- unlist(as.character(lat_lon$lon))
lat.lst <- unlist(as.character(lat_lon$lat))
#radius <- 2
url=as.list(paste("http://mcdc.missouri.edu/cgi-bin/broker",
"?_PROGRAM=websas.caps10acsb.sas&SERVICE=appdev",
"&sitename=", cities.lst,
"&longitude=", lon.lst,
"&latitude=", lat.lst,
"&radii=", radius,
"&dprofile=on&eprofile=on&sprofile=on&hprofile=on",
"&cntypops=on&printdetail=on&_debug=",
sep=""))
print(url)
result = list()
for (i in 1:length(url)){
html <- RCurl::getURL(url[[i]])
pattern <- "href=\"/tmpscratch/caps10acs(.*?).csv\""
match.info <- regexec(pattern=pattern, text=html)
num.start <- match.info[[1]][2]
num.length <- attr(match.info[[1]], "match.length")[2]
num <- substr(html, num.start, num.start + num.length - 1)
file.location <- paste("http://mcdc.missouri.edu/tmpscratch/",
"caps10acs", num, ".csv",
sep="")
file.location
data.tmp <- data.frame(read.csv(file=file.location, colClasses = "character"))
result[[i]] <- data.tmp
}
final.result <- do.call(rbind, result)
return(final.result)
}
getCensus(cities)
radius <- 2
getCensus(cities)
getCensus(cities, radius)
library(census)
library(census)
devtools::submit_cran("~/GitHub/census")
devtools::submit_cran("~/GitHub/census")
use_cran_comments()
use_cran_comments(~/GitHub/census)
use_cran_comments("~/GitHub/census")
library(census)
devtools::submit_cran("~/GitHub/census")
devtools::submit_cran("~/GitHub/census")
R.Version
R.Version()
R.Version()
R.Version()
